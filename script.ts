// Buscaminas
// Crear un programa que dado un array 2d permita ingresar una coordenada (representando los Ã­ndices 
// del array), y mostrar si era una casilla vacÃ­a o tenÃ­a una mina. En caso de que tenga una casilla vacÃ­a,
// debe poder seguir jugando e ingresando casillas. Si descubre todas las casillas vacÃ­as o elige una con 
// una mina, el juego debe terminar, e indicar si perdiÃ³ o ganÃ³. Las minas y casillas vacÃ­as (ocultas y 
// descubiertas) pueden representarse con emojis, con con nÃºmeros o letras.

const buscaminas = (tablero) => {
    let totalVacias = 0;
    for (let fila of tablero) {
        for (let item of fila) {
            if (item ==='ğŸ“¦') {totalVacias++};
        }  
    } 
    let coordenada = prompt("Ingrese una coordenada");
    while (totalVacias > 0) {
        let indexI = coordenada.slice(0, 1);
        let indexJ = coordenada.slice(2);
        totalVacias--;  
        if (tablero[indexI][indexJ] === 'ğŸ“¦') {
            coordenada = prompt("La caja estÃ¡ vacÃ­a! Ingrese una nueva coordenada");
        } else if (tablero[indexI][indexJ] === 'ğŸ’£') {
            alert("Â¡Oh no!Â¡Has encontrado una bomba! Has perdido");
            buscaminas(tablero);
        }
    }
    alert("Has descubierto todas las cajas vacÃ­as, has ganado!");
    buscaminas(tablero);
}

const tablero =
[
  ['ğŸ“¦', 'ğŸ’£', 'ğŸ’£'], // 0,0
  ['ğŸ“¦', 'ğŸ“¦', 'ğŸ“¦'], // 1,0 - 1,1 - 1,2
  ['ğŸ’£', 'ğŸ“¦', 'ğŸ“¦']  // 2,1 - 2,2
]

buscaminas(tablero)



// ğŸ“¦ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦

// // Ingrese una coordenada: 0,0
// // La caja estÃ¡ vacÃ­a!

// ğŸ’¨ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦

// // Ingrese una coordenada: 0,1
// // Â¡Oh no!Â¡Has encontrado una bomba!

// ğŸ’¨ ğŸ’¥ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦
// BONUS: Hacer que el juego se reinicie una vez terminado.